

/*
Below is a prototype of the code, in C++, that we planned to use to convert the numerical data into statements that the SpeakJet Shield  could use.
Copyright (C) 2013 Christin David Bose, Rahul Malhotra, Ian Yap Chang Jie


Kindly use the following to contact us in case of any queries :


Christin David Bose-CHRISTIN003@e.ntu.edu.sg
Rahul Malhotra-RAHUL003@e.ntu.edu.sg 
Ian Yap Chang Jie-ianyap92@hotmail.com


This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.


    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    
    
Please refer to the README file for the GNU General Public License. The same can also be found at <http://www.gnu.org/licenses/>
 
*/


#include<iostream>

#include<string>

using namespace std;


void main() {

    char units[10][7] = {"zero ", "one ", "two ", "three ", "four ", "five ", "six ", "seven ", "eight ", "nine "};

    char tens[10][9] = {"", "", "twenty ", "thirty ", "forty ", "fifty ", "sixty ", "seventy ", "eighty ", "ninety "};

    char teens[10][11] = {"ten ", "eleven ", "twelve ", "thirteen ", "fourteen ", "fifteen ", "sixteen ", "seventeen ", "eighteen ", "nineteen "};

    char x3places[3][10] = {"", "thousand ", "million "};

    double speed = 1234567.89;

    int intSpeed;

    char stringSpeed[1000] = "point ";

    char tempString[1000] = "";


    cout<<"\nEnter a Number Lesser Than 10 Million :";

    cin>>speed;


    intSpeed = speed * 100;


    strcat(stringSpeed, units[int((intSpeed % 100) / 10)]);

    if(intSpeed % 10 != 0) {

        strcat(stringSpeed, units[intSpeed % 10]);

    }

    intSpeed /= 100;


    for(int i = 0; (intSpeed != 0 && i < 2) || (intSpeed < 10 && intSpeed > 0 && i == 2); i++) {

        if(int((intSpeed % 1000) / 100) != 0) {

            strcat(tempString, units[int((intSpeed % 1000) / 100)]);

            strcat(tempString, "hundred ");

            if(intSpeed % 100 != 0) {

                strcat(tempString, "and ");

            }

        }

        if(intSpeed % 100 >= 20) {

            strcat(tempString, tens[int((intSpeed % 100) / 10)]);

            strcat(tempString, units[intSpeed % 10]);

        } else if(intSpeed % 100 >= 10) {

            strcat(tempString, teens[intSpeed % 10]);

        } else if(intSpeed % 100 != 0) {

            strcat(tempString, units[intSpeed % 10]);

        }

        if(i != 0) {

            strcat(tempString, x3places[i]);

        }

        strcat(tempString, stringSpeed);

        strcpy(stringSpeed, tempString);

        strcpy(tempString, "");

        intSpeed /= 1000;

    }

    strcpy(tempString, "your speed is ");

    strcat(tempString, stringSpeed);

    strcpy(stringSpeed, tempString);

    strcpy(tempString, "");

    cout<<stringSpeed<<"\n";

}

// The statement generated could then be passed to the serial data pin of the shield, after which the shield would take care of translating this into the relevant codes and synthesizing the voice.
